# MAIN

# And bills_branch.dat is simulating a bill and balance:
# 
# balance = 100
# for (i = 0; i < 10; i++) {
#   if (balance > A[i]) {
#      balance -= A[i];
#   }
#   A[i] = 0;
# }
# A[10] = balance
# 
# The result should be:
# 10000000 / 00000000;
# 10000004 / 00000000;
# 10000008 / 00000000;
# 1000000c / 000002bc;
# 10000010 / 00000000;
# 10000014 / 00000000;
# 10000018 / 00000190;
# 1000001c / 00000000;
# 10000020 / 00000000;
# 10000024 / 00000000;
# 10000028 / 00000038;

# addi $5, $0, 1
00400020 / 20050001;
# addi $6, $0, 100 
00400024 / 20060064; 
# addi $2, $0, 4096
00400028 / 20021000; 
# sll $2, $2, 16 
0040002c / 00421400; 
# addi $7, $2, 40 
00400030 / 20470028; 
# lw $3, 0($2)  
00400034 / 8c430000;
# slt $4, $6, $3 
00400038 / 00c3202a; 
# beq $4, $5, 8 [next-0x0040003c-4]
0040003c / 10850002;
# sub $6, $6, $3
00400040 / 00c33022; 
# sw $0, 0($2) 
00400044 / ac400000;
# addi $2, $2, 4	
00400048 / 20420004; 
# bne $2, $7, -28 [loop-0x0040004c-4]
0040004c / 1447fff9;
# sw $6, 0($7)  
00400050 / ace60000;

# DATA

10000000 / 0000000a; 
10000004 / 00000009; 
10000008 / 00000008; 
1000000c / 000002bc;
10000010 / 00000005; 
10000014 / 00000006;
10000018 / 00000190; 
1000001c / 00000001;
10000020 / 00000002; 
10000024 / 00000003; 


